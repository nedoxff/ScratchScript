//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ../ScratchScript.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.CLSCompliant(false)]
public partial class ScratchScriptLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, Whitespace=2, NewLine=3, Semicolon=4, LeftParen=5, RightParen=6, 
		LeftBracket=7, RightBracket=8, LeftBrace=9, RightBrace=10, Assignment=11, 
		Comma=12, Not=13, Arrow=14, Colon=15, Dot=16, Ternary=17, SingleLineCommentStart=18, 
		MultiLineCommentStart=19, MultiLineCommentEnd=20, Comment=21, LineComment=22, 
		At=23, Hashtag=24, Multiply=25, Plus=26, Minus=27, Divide=28, Power=29, 
		Modulus=30, And=31, Or=32, BitwiseAnd=33, BitwiseOr=34, BitwiseXor=35, 
		PostIncrement=36, PostDecrement=37, Greater=38, Lesser=39, GreaterOrEqual=40, 
		LesserOrEqual=41, Equal=42, NotEqual=43, AdditionAsignment=44, SubtractionAssignment=45, 
		MultiplicationAssignment=46, DivisionAssignment=47, ModulusAssignment=48, 
		PowerAssignment=49, If=50, Else=51, True=52, False=53, Break=54, Default=55, 
		For=56, Case=57, Switch=58, While=59, VariableDeclare=60, Import=61, ProcedureDeclare=62, 
		Return=63, Throw=64, Repeat=65, Event=66, From=67, Namespace=68, Type=69, 
		Number=70, Identifier=71, String=72, Color=73;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "Digit", "HexDigit", "Whitespace", "NewLine", "Semicolon", "LeftParen", 
		"RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", 
		"Assignment", "Comma", "Not", "Arrow", "Colon", "Dot", "Ternary", "SingleLineCommentStart", 
		"MultiLineCommentStart", "MultiLineCommentEnd", "Comment", "LineComment", 
		"At", "Hashtag", "Multiply", "Plus", "Minus", "Divide", "Power", "Modulus", 
		"And", "Or", "BitwiseAnd", "BitwiseOr", "BitwiseXor", "PostIncrement", 
		"PostDecrement", "Greater", "Lesser", "GreaterOrEqual", "LesserOrEqual", 
		"Equal", "NotEqual", "AdditionAsignment", "SubtractionAssignment", "MultiplicationAssignment", 
		"DivisionAssignment", "ModulusAssignment", "PowerAssignment", "If", "Else", 
		"True", "False", "Break", "Default", "For", "Case", "Switch", "While", 
		"VariableDeclare", "Import", "ProcedureDeclare", "Return", "Throw", "Repeat", 
		"Event", "From", "Namespace", "Type", "Number", "Identifier", "String", 
		"Color"
	};


	public ScratchScriptLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ScratchScriptLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'List'", null, null, "';'", "'('", "')'", "'['", "']'", "'{'", 
		"'}'", "'='", "','", "'!'", "'->'", "':'", "'.'", "'?'", "'//'", "'/*'", 
		"'*/'", null, null, "'@'", "'#'", "'*'", "'+'", "'-'", "'/'", "'**'", 
		"'%'", "'&&'", "'||'", "'&'", "'|'", "'^'", "'++'", "'--'", "'>'", "'<'", 
		"'>='", "'<='", "'=='", "'!='", "'+='", "'-='", "'*='", "'/='", "'%='", 
		"'**='", "'if'", "'else'", "'true'", "'false'", "'break'", "'default'", 
		"'for'", null, "'switch'", "'while'", null, null, null, null, null, "'repeat'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, "Whitespace", "NewLine", "Semicolon", "LeftParen", "RightParen", 
		"LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Assignment", 
		"Comma", "Not", "Arrow", "Colon", "Dot", "Ternary", "SingleLineCommentStart", 
		"MultiLineCommentStart", "MultiLineCommentEnd", "Comment", "LineComment", 
		"At", "Hashtag", "Multiply", "Plus", "Minus", "Divide", "Power", "Modulus", 
		"And", "Or", "BitwiseAnd", "BitwiseOr", "BitwiseXor", "PostIncrement", 
		"PostDecrement", "Greater", "Lesser", "GreaterOrEqual", "LesserOrEqual", 
		"Equal", "NotEqual", "AdditionAsignment", "SubtractionAssignment", "MultiplicationAssignment", 
		"DivisionAssignment", "ModulusAssignment", "PowerAssignment", "If", "Else", 
		"True", "False", "Break", "Default", "For", "Case", "Switch", "While", 
		"VariableDeclare", "Import", "ProcedureDeclare", "Return", "Throw", "Repeat", 
		"Event", "From", "Namespace", "Type", "Number", "Identifier", "String", 
		"Color"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "ScratchScript.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static ScratchScriptLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,73,535,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,1,0,1,0,1,0,1,0,1,0,1,1,1,
		1,1,2,1,2,1,3,1,3,1,3,1,3,1,4,3,4,166,8,4,1,4,1,4,3,4,170,8,4,1,4,1,4,
		1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,
		1,13,1,13,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,
		1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,5,22,214,8,22,10,22,
		12,22,217,9,22,1,22,1,22,1,22,1,22,1,23,1,23,5,23,225,8,23,10,23,12,23,
		228,9,23,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,
		29,1,29,1,30,1,30,1,30,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,34,1,
		34,1,35,1,35,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,40,1,
		40,1,41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,1,45,1,
		45,1,45,1,46,1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,48,1,49,1,49,1,49,1,
		50,1,50,1,50,1,50,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,
		53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,
		55,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,58,1,
		58,1,58,1,58,1,58,1,58,4,58,345,8,58,11,58,12,58,346,1,59,1,59,1,59,1,
		59,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,
		61,4,61,367,8,61,11,61,12,61,368,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,
		62,4,62,379,8,62,11,62,12,62,380,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,
		63,1,63,1,63,4,63,393,8,63,11,63,12,63,394,1,64,1,64,1,64,1,64,1,64,1,
		64,1,64,1,64,4,64,405,8,64,11,64,12,64,406,1,65,1,65,1,65,1,65,1,65,1,
		65,1,65,4,65,416,8,65,11,65,12,65,417,1,66,1,66,1,66,1,66,1,66,1,66,1,
		66,1,67,1,67,1,67,1,67,4,67,431,8,67,11,67,12,67,432,1,68,1,68,1,68,1,
		68,1,68,1,68,4,68,441,8,68,11,68,12,68,442,1,69,1,69,1,69,1,69,1,69,1,
		69,1,69,1,69,1,69,1,69,1,69,4,69,456,8,69,11,69,12,69,457,1,70,1,70,1,
		70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,
		70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,3,70,484,8,70,1,71,4,71,487,8,71,
		11,71,12,71,488,1,71,1,71,4,71,493,8,71,11,71,12,71,494,3,71,497,8,71,
		1,72,1,72,5,72,501,8,72,10,72,12,72,504,9,72,1,73,1,73,1,73,1,73,5,73,
		510,8,73,10,73,12,73,513,9,73,1,73,1,73,1,73,1,73,1,73,5,73,520,8,73,10,
		73,12,73,523,9,73,1,73,3,73,526,8,73,1,74,1,74,1,74,1,74,1,74,1,74,1,74,
		1,74,1,215,0,75,1,1,3,0,5,0,7,2,9,3,11,4,13,5,15,6,17,7,19,8,21,9,23,10,
		25,11,27,12,29,13,31,14,33,15,35,16,37,17,39,18,41,19,43,20,45,21,47,22,
		49,23,51,24,53,25,55,26,57,27,59,28,61,29,63,30,65,31,67,32,69,33,71,34,
		73,35,75,36,77,37,79,38,81,39,83,40,85,41,87,42,89,43,91,44,93,45,95,46,
		97,47,99,48,101,49,103,50,105,51,107,52,109,53,111,54,113,55,115,56,117,
		57,119,58,121,59,123,60,125,61,127,62,129,63,131,64,133,65,135,66,137,
		67,139,68,141,69,143,70,145,71,147,72,149,73,1,0,11,1,0,48,57,3,0,48,57,
		65,70,97,102,2,0,9,9,32,32,2,0,10,10,13,13,1,0,46,46,3,0,65,90,95,95,97,
		122,4,0,48,57,65,90,95,95,97,122,4,0,10,10,13,13,34,34,92,92,2,0,34,34,
		92,92,4,0,10,10,13,13,39,39,92,92,2,0,39,39,92,92,558,0,1,1,0,0,0,0,7,
		1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
		0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
		1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
		0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
		1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
		0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
		1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,
		0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,
		1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,
		0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,
		0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,
		0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,
		0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,
		0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,1,151,1,0,0,0,3,156,1,0,0,0,5,158,1,
		0,0,0,7,160,1,0,0,0,9,169,1,0,0,0,11,173,1,0,0,0,13,175,1,0,0,0,15,177,
		1,0,0,0,17,179,1,0,0,0,19,181,1,0,0,0,21,183,1,0,0,0,23,185,1,0,0,0,25,
		187,1,0,0,0,27,189,1,0,0,0,29,191,1,0,0,0,31,193,1,0,0,0,33,196,1,0,0,
		0,35,198,1,0,0,0,37,200,1,0,0,0,39,202,1,0,0,0,41,205,1,0,0,0,43,208,1,
		0,0,0,45,211,1,0,0,0,47,222,1,0,0,0,49,231,1,0,0,0,51,233,1,0,0,0,53,235,
		1,0,0,0,55,237,1,0,0,0,57,239,1,0,0,0,59,241,1,0,0,0,61,243,1,0,0,0,63,
		246,1,0,0,0,65,248,1,0,0,0,67,251,1,0,0,0,69,254,1,0,0,0,71,256,1,0,0,
		0,73,258,1,0,0,0,75,260,1,0,0,0,77,263,1,0,0,0,79,266,1,0,0,0,81,268,1,
		0,0,0,83,270,1,0,0,0,85,273,1,0,0,0,87,276,1,0,0,0,89,279,1,0,0,0,91,282,
		1,0,0,0,93,285,1,0,0,0,95,288,1,0,0,0,97,291,1,0,0,0,99,294,1,0,0,0,101,
		297,1,0,0,0,103,301,1,0,0,0,105,304,1,0,0,0,107,309,1,0,0,0,109,314,1,
		0,0,0,111,320,1,0,0,0,113,326,1,0,0,0,115,334,1,0,0,0,117,338,1,0,0,0,
		119,348,1,0,0,0,121,355,1,0,0,0,123,361,1,0,0,0,125,370,1,0,0,0,127,382,
		1,0,0,0,129,396,1,0,0,0,131,408,1,0,0,0,133,419,1,0,0,0,135,426,1,0,0,
		0,137,434,1,0,0,0,139,444,1,0,0,0,141,483,1,0,0,0,143,486,1,0,0,0,145,
		498,1,0,0,0,147,525,1,0,0,0,149,527,1,0,0,0,151,152,5,76,0,0,152,153,5,
		105,0,0,153,154,5,115,0,0,154,155,5,116,0,0,155,2,1,0,0,0,156,157,7,0,
		0,0,157,4,1,0,0,0,158,159,7,1,0,0,159,6,1,0,0,0,160,161,7,2,0,0,161,162,
		1,0,0,0,162,163,6,3,0,0,163,8,1,0,0,0,164,166,5,13,0,0,165,164,1,0,0,0,
		165,166,1,0,0,0,166,167,1,0,0,0,167,170,5,10,0,0,168,170,7,3,0,0,169,165,
		1,0,0,0,169,168,1,0,0,0,170,171,1,0,0,0,171,172,6,4,1,0,172,10,1,0,0,0,
		173,174,5,59,0,0,174,12,1,0,0,0,175,176,5,40,0,0,176,14,1,0,0,0,177,178,
		5,41,0,0,178,16,1,0,0,0,179,180,5,91,0,0,180,18,1,0,0,0,181,182,5,93,0,
		0,182,20,1,0,0,0,183,184,5,123,0,0,184,22,1,0,0,0,185,186,5,125,0,0,186,
		24,1,0,0,0,187,188,5,61,0,0,188,26,1,0,0,0,189,190,5,44,0,0,190,28,1,0,
		0,0,191,192,5,33,0,0,192,30,1,0,0,0,193,194,5,45,0,0,194,195,5,62,0,0,
		195,32,1,0,0,0,196,197,5,58,0,0,197,34,1,0,0,0,198,199,5,46,0,0,199,36,
		1,0,0,0,200,201,5,63,0,0,201,38,1,0,0,0,202,203,5,47,0,0,203,204,5,47,
		0,0,204,40,1,0,0,0,205,206,5,47,0,0,206,207,5,42,0,0,207,42,1,0,0,0,208,
		209,5,42,0,0,209,210,5,47,0,0,210,44,1,0,0,0,211,215,3,41,20,0,212,214,
		9,0,0,0,213,212,1,0,0,0,214,217,1,0,0,0,215,216,1,0,0,0,215,213,1,0,0,
		0,216,218,1,0,0,0,217,215,1,0,0,0,218,219,3,43,21,0,219,220,1,0,0,0,220,
		221,6,22,1,0,221,46,1,0,0,0,222,226,3,39,19,0,223,225,8,3,0,0,224,223,
		1,0,0,0,225,228,1,0,0,0,226,224,1,0,0,0,226,227,1,0,0,0,227,229,1,0,0,
		0,228,226,1,0,0,0,229,230,6,23,1,0,230,48,1,0,0,0,231,232,5,64,0,0,232,
		50,1,0,0,0,233,234,5,35,0,0,234,52,1,0,0,0,235,236,5,42,0,0,236,54,1,0,
		0,0,237,238,5,43,0,0,238,56,1,0,0,0,239,240,5,45,0,0,240,58,1,0,0,0,241,
		242,5,47,0,0,242,60,1,0,0,0,243,244,5,42,0,0,244,245,5,42,0,0,245,62,1,
		0,0,0,246,247,5,37,0,0,247,64,1,0,0,0,248,249,5,38,0,0,249,250,5,38,0,
		0,250,66,1,0,0,0,251,252,5,124,0,0,252,253,5,124,0,0,253,68,1,0,0,0,254,
		255,5,38,0,0,255,70,1,0,0,0,256,257,5,124,0,0,257,72,1,0,0,0,258,259,5,
		94,0,0,259,74,1,0,0,0,260,261,5,43,0,0,261,262,5,43,0,0,262,76,1,0,0,0,
		263,264,5,45,0,0,264,265,5,45,0,0,265,78,1,0,0,0,266,267,5,62,0,0,267,
		80,1,0,0,0,268,269,5,60,0,0,269,82,1,0,0,0,270,271,5,62,0,0,271,272,5,
		61,0,0,272,84,1,0,0,0,273,274,5,60,0,0,274,275,5,61,0,0,275,86,1,0,0,0,
		276,277,5,61,0,0,277,278,5,61,0,0,278,88,1,0,0,0,279,280,5,33,0,0,280,
		281,5,61,0,0,281,90,1,0,0,0,282,283,5,43,0,0,283,284,5,61,0,0,284,92,1,
		0,0,0,285,286,5,45,0,0,286,287,5,61,0,0,287,94,1,0,0,0,288,289,5,42,0,
		0,289,290,5,61,0,0,290,96,1,0,0,0,291,292,5,47,0,0,292,293,5,61,0,0,293,
		98,1,0,0,0,294,295,5,37,0,0,295,296,5,61,0,0,296,100,1,0,0,0,297,298,5,
		42,0,0,298,299,5,42,0,0,299,300,5,61,0,0,300,102,1,0,0,0,301,302,5,105,
		0,0,302,303,5,102,0,0,303,104,1,0,0,0,304,305,5,101,0,0,305,306,5,108,
		0,0,306,307,5,115,0,0,307,308,5,101,0,0,308,106,1,0,0,0,309,310,5,116,
		0,0,310,311,5,114,0,0,311,312,5,117,0,0,312,313,5,101,0,0,313,108,1,0,
		0,0,314,315,5,102,0,0,315,316,5,97,0,0,316,317,5,108,0,0,317,318,5,115,
		0,0,318,319,5,101,0,0,319,110,1,0,0,0,320,321,5,98,0,0,321,322,5,114,0,
		0,322,323,5,101,0,0,323,324,5,97,0,0,324,325,5,107,0,0,325,112,1,0,0,0,
		326,327,5,100,0,0,327,328,5,101,0,0,328,329,5,102,0,0,329,330,5,97,0,0,
		330,331,5,117,0,0,331,332,5,108,0,0,332,333,5,116,0,0,333,114,1,0,0,0,
		334,335,5,102,0,0,335,336,5,111,0,0,336,337,5,114,0,0,337,116,1,0,0,0,
		338,339,5,99,0,0,339,340,5,97,0,0,340,341,5,115,0,0,341,342,5,101,0,0,
		342,344,1,0,0,0,343,345,3,7,3,0,344,343,1,0,0,0,345,346,1,0,0,0,346,344,
		1,0,0,0,346,347,1,0,0,0,347,118,1,0,0,0,348,349,5,115,0,0,349,350,5,119,
		0,0,350,351,5,105,0,0,351,352,5,116,0,0,352,353,5,99,0,0,353,354,5,104,
		0,0,354,120,1,0,0,0,355,356,5,119,0,0,356,357,5,104,0,0,357,358,5,105,
		0,0,358,359,5,108,0,0,359,360,5,101,0,0,360,122,1,0,0,0,361,362,5,118,
		0,0,362,363,5,97,0,0,363,364,5,114,0,0,364,366,1,0,0,0,365,367,3,7,3,0,
		366,365,1,0,0,0,367,368,1,0,0,0,368,366,1,0,0,0,368,369,1,0,0,0,369,124,
		1,0,0,0,370,371,5,105,0,0,371,372,5,109,0,0,372,373,5,112,0,0,373,374,
		5,111,0,0,374,375,5,114,0,0,375,376,5,116,0,0,376,378,1,0,0,0,377,379,
		3,7,3,0,378,377,1,0,0,0,379,380,1,0,0,0,380,378,1,0,0,0,380,381,1,0,0,
		0,381,126,1,0,0,0,382,383,5,102,0,0,383,384,5,117,0,0,384,385,5,110,0,
		0,385,386,5,99,0,0,386,387,5,116,0,0,387,388,5,105,0,0,388,389,5,111,0,
		0,389,390,5,110,0,0,390,392,1,0,0,0,391,393,3,7,3,0,392,391,1,0,0,0,393,
		394,1,0,0,0,394,392,1,0,0,0,394,395,1,0,0,0,395,128,1,0,0,0,396,397,5,
		114,0,0,397,398,5,101,0,0,398,399,5,116,0,0,399,400,5,117,0,0,400,401,
		5,114,0,0,401,402,5,110,0,0,402,404,1,0,0,0,403,405,3,7,3,0,404,403,1,
		0,0,0,405,406,1,0,0,0,406,404,1,0,0,0,406,407,1,0,0,0,407,130,1,0,0,0,
		408,409,5,116,0,0,409,410,5,104,0,0,410,411,5,114,0,0,411,412,5,111,0,
		0,412,413,5,119,0,0,413,415,1,0,0,0,414,416,3,7,3,0,415,414,1,0,0,0,416,
		417,1,0,0,0,417,415,1,0,0,0,417,418,1,0,0,0,418,132,1,0,0,0,419,420,5,
		114,0,0,420,421,5,101,0,0,421,422,5,112,0,0,422,423,5,101,0,0,423,424,
		5,97,0,0,424,425,5,116,0,0,425,134,1,0,0,0,426,427,5,111,0,0,427,428,5,
		110,0,0,428,430,1,0,0,0,429,431,3,7,3,0,430,429,1,0,0,0,431,432,1,0,0,
		0,432,430,1,0,0,0,432,433,1,0,0,0,433,136,1,0,0,0,434,435,5,102,0,0,435,
		436,5,114,0,0,436,437,5,111,0,0,437,438,5,109,0,0,438,440,1,0,0,0,439,
		441,3,7,3,0,440,439,1,0,0,0,441,442,1,0,0,0,442,440,1,0,0,0,442,443,1,
		0,0,0,443,138,1,0,0,0,444,445,5,110,0,0,445,446,5,97,0,0,446,447,5,109,
		0,0,447,448,5,101,0,0,448,449,5,115,0,0,449,450,5,112,0,0,450,451,5,97,
		0,0,451,452,5,99,0,0,452,453,5,101,0,0,453,455,1,0,0,0,454,456,3,7,3,0,
		455,454,1,0,0,0,456,457,1,0,0,0,457,455,1,0,0,0,457,458,1,0,0,0,458,140,
		1,0,0,0,459,460,5,110,0,0,460,461,5,117,0,0,461,462,5,109,0,0,462,463,
		5,98,0,0,463,464,5,101,0,0,464,484,5,114,0,0,465,466,5,115,0,0,466,467,
		5,116,0,0,467,468,5,114,0,0,468,469,5,105,0,0,469,470,5,110,0,0,470,484,
		5,103,0,0,471,472,5,98,0,0,472,473,5,111,0,0,473,474,5,111,0,0,474,484,
		5,108,0,0,475,476,5,99,0,0,476,477,5,111,0,0,477,478,5,108,0,0,478,479,
		5,111,0,0,479,484,5,114,0,0,480,481,5,97,0,0,481,482,5,110,0,0,482,484,
		5,121,0,0,483,459,1,0,0,0,483,465,1,0,0,0,483,471,1,0,0,0,483,475,1,0,
		0,0,483,480,1,0,0,0,484,142,1,0,0,0,485,487,3,3,1,0,486,485,1,0,0,0,487,
		488,1,0,0,0,488,486,1,0,0,0,488,489,1,0,0,0,489,496,1,0,0,0,490,492,7,
		4,0,0,491,493,3,3,1,0,492,491,1,0,0,0,493,494,1,0,0,0,494,492,1,0,0,0,
		494,495,1,0,0,0,495,497,1,0,0,0,496,490,1,0,0,0,496,497,1,0,0,0,497,144,
		1,0,0,0,498,502,7,5,0,0,499,501,7,6,0,0,500,499,1,0,0,0,501,504,1,0,0,
		0,502,500,1,0,0,0,502,503,1,0,0,0,503,146,1,0,0,0,504,502,1,0,0,0,505,
		511,5,34,0,0,506,510,8,7,0,0,507,508,5,92,0,0,508,510,7,8,0,0,509,506,
		1,0,0,0,509,507,1,0,0,0,510,513,1,0,0,0,511,509,1,0,0,0,511,512,1,0,0,
		0,512,514,1,0,0,0,513,511,1,0,0,0,514,526,5,34,0,0,515,521,5,39,0,0,516,
		520,8,9,0,0,517,518,5,92,0,0,518,520,7,10,0,0,519,516,1,0,0,0,519,517,
		1,0,0,0,520,523,1,0,0,0,521,519,1,0,0,0,521,522,1,0,0,0,522,524,1,0,0,
		0,523,521,1,0,0,0,524,526,5,39,0,0,525,505,1,0,0,0,525,515,1,0,0,0,526,
		148,1,0,0,0,527,528,3,51,25,0,528,529,3,5,2,0,529,530,3,5,2,0,530,531,
		3,5,2,0,531,532,3,5,2,0,532,533,3,5,2,0,533,534,3,5,2,0,534,150,1,0,0,
		0,24,0,165,169,215,226,346,368,380,394,406,417,432,442,457,483,488,494,
		496,502,509,511,519,521,525,2,0,1,0,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
