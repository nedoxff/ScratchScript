//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ../ScratchScript.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.CLSCompliant(false)]
public partial class ScratchScriptLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, Whitespace=2, NewLine=3, Semicolon=4, LeftParen=5, RightParen=6, 
		LeftBracket=7, RightBracket=8, LeftBrace=9, RightBrace=10, Assignment=11, 
		Comma=12, Not=13, Arrow=14, Colon=15, Dot=16, Ternary=17, SingleLineCommentStart=18, 
		MultiLineCommentStart=19, MultiLineCommentEnd=20, Comment=21, LineComment=22, 
		At=23, Hashtag=24, Multiply=25, Plus=26, Minus=27, Divide=28, Power=29, 
		Modulus=30, And=31, Or=32, BitwiseAnd=33, BitwiseOr=34, BitwiseXor=35, 
		PostIncrement=36, PostDecrement=37, Greater=38, Lesser=39, GreaterOrEqual=40, 
		LesserOrEqual=41, Equal=42, NotEqual=43, AdditionAsignment=44, SubtractionAssignment=45, 
		MultiplicationAssignment=46, DivisionAssignment=47, ModulusAssignment=48, 
		PowerAssignment=49, If=50, Else=51, True=52, False=53, Break=54, Default=55, 
		Debugger=56, As=57, For=58, Case=59, Switch=60, While=61, VariableDeclare=62, 
		Import=63, ProcedureDeclare=64, Return=65, Throw=66, Repeat=67, Event=68, 
		From=69, Namespace=70, Type=71, Number=72, Identifier=73, String=74, Color=75;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "Digit", "HexDigit", "Whitespace", "NewLine", "Semicolon", "LeftParen", 
		"RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", 
		"Assignment", "Comma", "Not", "Arrow", "Colon", "Dot", "Ternary", "SingleLineCommentStart", 
		"MultiLineCommentStart", "MultiLineCommentEnd", "Comment", "LineComment", 
		"At", "Hashtag", "Multiply", "Plus", "Minus", "Divide", "Power", "Modulus", 
		"And", "Or", "BitwiseAnd", "BitwiseOr", "BitwiseXor", "PostIncrement", 
		"PostDecrement", "Greater", "Lesser", "GreaterOrEqual", "LesserOrEqual", 
		"Equal", "NotEqual", "AdditionAsignment", "SubtractionAssignment", "MultiplicationAssignment", 
		"DivisionAssignment", "ModulusAssignment", "PowerAssignment", "If", "Else", 
		"True", "False", "Break", "Default", "Debugger", "As", "For", "Case", 
		"Switch", "While", "VariableDeclare", "Import", "ProcedureDeclare", "Return", 
		"Throw", "Repeat", "Event", "From", "Namespace", "Type", "Number", "Identifier", 
		"String", "Color"
	};


	public ScratchScriptLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ScratchScriptLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'List'", null, null, "';'", "'('", "')'", "'['", "']'", "'{'", 
		"'}'", "'='", "','", "'!'", "'->'", "':'", "'.'", "'?'", "'//'", "'/*'", 
		"'*/'", null, null, "'@'", "'#'", "'*'", "'+'", "'-'", "'/'", "'**'", 
		"'%'", "'&&'", "'||'", "'&'", "'|'", "'^'", "'++'", "'--'", "'>'", "'<'", 
		"'>='", "'<='", "'=='", "'!='", "'+='", "'-='", "'*='", "'/='", "'%='", 
		"'**='", "'if'", "'else'", "'true'", "'false'", "'break'", "'default'", 
		"'debugger'", null, "'for'", null, "'switch'", "'while'", null, null, 
		null, null, null, "'repeat'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, "Whitespace", "NewLine", "Semicolon", "LeftParen", "RightParen", 
		"LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "Assignment", 
		"Comma", "Not", "Arrow", "Colon", "Dot", "Ternary", "SingleLineCommentStart", 
		"MultiLineCommentStart", "MultiLineCommentEnd", "Comment", "LineComment", 
		"At", "Hashtag", "Multiply", "Plus", "Minus", "Divide", "Power", "Modulus", 
		"And", "Or", "BitwiseAnd", "BitwiseOr", "BitwiseXor", "PostIncrement", 
		"PostDecrement", "Greater", "Lesser", "GreaterOrEqual", "LesserOrEqual", 
		"Equal", "NotEqual", "AdditionAsignment", "SubtractionAssignment", "MultiplicationAssignment", 
		"DivisionAssignment", "ModulusAssignment", "PowerAssignment", "If", "Else", 
		"True", "False", "Break", "Default", "Debugger", "As", "For", "Case", 
		"Switch", "While", "VariableDeclare", "Import", "ProcedureDeclare", "Return", 
		"Throw", "Repeat", "Event", "From", "Namespace", "Type", "Number", "Identifier", 
		"String", "Color"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "ScratchScript.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static ScratchScriptLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,75,559,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,1,0,1,
		0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,4,3,4,170,8,4,1,4,1,4,
		3,4,174,8,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,
		1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,17,
		1,17,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,
		5,22,218,8,22,10,22,12,22,221,9,22,1,22,1,22,1,22,1,22,1,23,1,23,5,23,
		229,8,23,10,23,12,23,232,9,23,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,
		1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,32,1,32,1,32,
		1,33,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,37,1,38,1,38,
		1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,
		1,44,1,44,1,44,1,45,1,45,1,45,1,46,1,46,1,46,1,47,1,47,1,47,1,48,1,48,
		1,48,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,52,1,52,1,52,
		1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,55,
		1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,57,
		1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,4,58,352,8,
		58,11,58,12,58,353,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,1,60,4,
		60,366,8,60,11,60,12,60,367,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,62,1,
		62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,63,4,63,388,8,63,11,63,12,
		63,389,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,4,64,400,8,64,11,64,12,
		64,401,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,4,65,414,8,65,
		11,65,12,65,415,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,4,66,426,8,66,
		11,66,12,66,427,1,67,1,67,1,67,1,67,1,67,1,67,1,67,4,67,437,8,67,11,67,
		12,67,438,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,4,69,
		452,8,69,11,69,12,69,453,1,70,1,70,1,70,1,70,1,70,1,70,4,70,462,8,70,11,
		70,12,70,463,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,4,
		71,477,8,71,11,71,12,71,478,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,
		72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,
		72,1,72,1,72,1,72,1,72,3,72,508,8,72,1,73,4,73,511,8,73,11,73,12,73,512,
		1,73,1,73,4,73,517,8,73,11,73,12,73,518,3,73,521,8,73,1,74,1,74,5,74,525,
		8,74,10,74,12,74,528,9,74,1,75,1,75,1,75,1,75,5,75,534,8,75,10,75,12,75,
		537,9,75,1,75,1,75,1,75,1,75,1,75,5,75,544,8,75,10,75,12,75,547,9,75,1,
		75,3,75,550,8,75,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,219,0,77,1,
		1,3,0,5,0,7,2,9,3,11,4,13,5,15,6,17,7,19,8,21,9,23,10,25,11,27,12,29,13,
		31,14,33,15,35,16,37,17,39,18,41,19,43,20,45,21,47,22,49,23,51,24,53,25,
		55,26,57,27,59,28,61,29,63,30,65,31,67,32,69,33,71,34,73,35,75,36,77,37,
		79,38,81,39,83,40,85,41,87,42,89,43,91,44,93,45,95,46,97,47,99,48,101,
		49,103,50,105,51,107,52,109,53,111,54,113,55,115,56,117,57,119,58,121,
		59,123,60,125,61,127,62,129,63,131,64,133,65,135,66,137,67,139,68,141,
		69,143,70,145,71,147,72,149,73,151,74,153,75,1,0,11,1,0,48,57,3,0,48,57,
		65,70,97,102,2,0,9,9,32,32,2,0,10,10,13,13,1,0,46,46,3,0,65,90,95,95,97,
		122,4,0,48,57,65,90,95,95,97,122,4,0,10,10,13,13,34,34,92,92,2,0,34,34,
		92,92,4,0,10,10,13,13,39,39,92,92,2,0,39,39,92,92,583,0,1,1,0,0,0,0,7,
		1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
		0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
		1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
		0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
		1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
		0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
		1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,
		0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,
		1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,
		0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,
		0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,
		0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,
		0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,
		0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,1,155,1,
		0,0,0,3,160,1,0,0,0,5,162,1,0,0,0,7,164,1,0,0,0,9,173,1,0,0,0,11,177,1,
		0,0,0,13,179,1,0,0,0,15,181,1,0,0,0,17,183,1,0,0,0,19,185,1,0,0,0,21,187,
		1,0,0,0,23,189,1,0,0,0,25,191,1,0,0,0,27,193,1,0,0,0,29,195,1,0,0,0,31,
		197,1,0,0,0,33,200,1,0,0,0,35,202,1,0,0,0,37,204,1,0,0,0,39,206,1,0,0,
		0,41,209,1,0,0,0,43,212,1,0,0,0,45,215,1,0,0,0,47,226,1,0,0,0,49,235,1,
		0,0,0,51,237,1,0,0,0,53,239,1,0,0,0,55,241,1,0,0,0,57,243,1,0,0,0,59,245,
		1,0,0,0,61,247,1,0,0,0,63,250,1,0,0,0,65,252,1,0,0,0,67,255,1,0,0,0,69,
		258,1,0,0,0,71,260,1,0,0,0,73,262,1,0,0,0,75,264,1,0,0,0,77,267,1,0,0,
		0,79,270,1,0,0,0,81,272,1,0,0,0,83,274,1,0,0,0,85,277,1,0,0,0,87,280,1,
		0,0,0,89,283,1,0,0,0,91,286,1,0,0,0,93,289,1,0,0,0,95,292,1,0,0,0,97,295,
		1,0,0,0,99,298,1,0,0,0,101,301,1,0,0,0,103,305,1,0,0,0,105,308,1,0,0,0,
		107,313,1,0,0,0,109,318,1,0,0,0,111,324,1,0,0,0,113,330,1,0,0,0,115,338,
		1,0,0,0,117,347,1,0,0,0,119,355,1,0,0,0,121,359,1,0,0,0,123,369,1,0,0,
		0,125,376,1,0,0,0,127,382,1,0,0,0,129,391,1,0,0,0,131,403,1,0,0,0,133,
		417,1,0,0,0,135,429,1,0,0,0,137,440,1,0,0,0,139,447,1,0,0,0,141,455,1,
		0,0,0,143,465,1,0,0,0,145,507,1,0,0,0,147,510,1,0,0,0,149,522,1,0,0,0,
		151,549,1,0,0,0,153,551,1,0,0,0,155,156,5,76,0,0,156,157,5,105,0,0,157,
		158,5,115,0,0,158,159,5,116,0,0,159,2,1,0,0,0,160,161,7,0,0,0,161,4,1,
		0,0,0,162,163,7,1,0,0,163,6,1,0,0,0,164,165,7,2,0,0,165,166,1,0,0,0,166,
		167,6,3,0,0,167,8,1,0,0,0,168,170,5,13,0,0,169,168,1,0,0,0,169,170,1,0,
		0,0,170,171,1,0,0,0,171,174,5,10,0,0,172,174,7,3,0,0,173,169,1,0,0,0,173,
		172,1,0,0,0,174,175,1,0,0,0,175,176,6,4,1,0,176,10,1,0,0,0,177,178,5,59,
		0,0,178,12,1,0,0,0,179,180,5,40,0,0,180,14,1,0,0,0,181,182,5,41,0,0,182,
		16,1,0,0,0,183,184,5,91,0,0,184,18,1,0,0,0,185,186,5,93,0,0,186,20,1,0,
		0,0,187,188,5,123,0,0,188,22,1,0,0,0,189,190,5,125,0,0,190,24,1,0,0,0,
		191,192,5,61,0,0,192,26,1,0,0,0,193,194,5,44,0,0,194,28,1,0,0,0,195,196,
		5,33,0,0,196,30,1,0,0,0,197,198,5,45,0,0,198,199,5,62,0,0,199,32,1,0,0,
		0,200,201,5,58,0,0,201,34,1,0,0,0,202,203,5,46,0,0,203,36,1,0,0,0,204,
		205,5,63,0,0,205,38,1,0,0,0,206,207,5,47,0,0,207,208,5,47,0,0,208,40,1,
		0,0,0,209,210,5,47,0,0,210,211,5,42,0,0,211,42,1,0,0,0,212,213,5,42,0,
		0,213,214,5,47,0,0,214,44,1,0,0,0,215,219,3,41,20,0,216,218,9,0,0,0,217,
		216,1,0,0,0,218,221,1,0,0,0,219,220,1,0,0,0,219,217,1,0,0,0,220,222,1,
		0,0,0,221,219,1,0,0,0,222,223,3,43,21,0,223,224,1,0,0,0,224,225,6,22,1,
		0,225,46,1,0,0,0,226,230,3,39,19,0,227,229,8,3,0,0,228,227,1,0,0,0,229,
		232,1,0,0,0,230,228,1,0,0,0,230,231,1,0,0,0,231,233,1,0,0,0,232,230,1,
		0,0,0,233,234,6,23,1,0,234,48,1,0,0,0,235,236,5,64,0,0,236,50,1,0,0,0,
		237,238,5,35,0,0,238,52,1,0,0,0,239,240,5,42,0,0,240,54,1,0,0,0,241,242,
		5,43,0,0,242,56,1,0,0,0,243,244,5,45,0,0,244,58,1,0,0,0,245,246,5,47,0,
		0,246,60,1,0,0,0,247,248,5,42,0,0,248,249,5,42,0,0,249,62,1,0,0,0,250,
		251,5,37,0,0,251,64,1,0,0,0,252,253,5,38,0,0,253,254,5,38,0,0,254,66,1,
		0,0,0,255,256,5,124,0,0,256,257,5,124,0,0,257,68,1,0,0,0,258,259,5,38,
		0,0,259,70,1,0,0,0,260,261,5,124,0,0,261,72,1,0,0,0,262,263,5,94,0,0,263,
		74,1,0,0,0,264,265,5,43,0,0,265,266,5,43,0,0,266,76,1,0,0,0,267,268,5,
		45,0,0,268,269,5,45,0,0,269,78,1,0,0,0,270,271,5,62,0,0,271,80,1,0,0,0,
		272,273,5,60,0,0,273,82,1,0,0,0,274,275,5,62,0,0,275,276,5,61,0,0,276,
		84,1,0,0,0,277,278,5,60,0,0,278,279,5,61,0,0,279,86,1,0,0,0,280,281,5,
		61,0,0,281,282,5,61,0,0,282,88,1,0,0,0,283,284,5,33,0,0,284,285,5,61,0,
		0,285,90,1,0,0,0,286,287,5,43,0,0,287,288,5,61,0,0,288,92,1,0,0,0,289,
		290,5,45,0,0,290,291,5,61,0,0,291,94,1,0,0,0,292,293,5,42,0,0,293,294,
		5,61,0,0,294,96,1,0,0,0,295,296,5,47,0,0,296,297,5,61,0,0,297,98,1,0,0,
		0,298,299,5,37,0,0,299,300,5,61,0,0,300,100,1,0,0,0,301,302,5,42,0,0,302,
		303,5,42,0,0,303,304,5,61,0,0,304,102,1,0,0,0,305,306,5,105,0,0,306,307,
		5,102,0,0,307,104,1,0,0,0,308,309,5,101,0,0,309,310,5,108,0,0,310,311,
		5,115,0,0,311,312,5,101,0,0,312,106,1,0,0,0,313,314,5,116,0,0,314,315,
		5,114,0,0,315,316,5,117,0,0,316,317,5,101,0,0,317,108,1,0,0,0,318,319,
		5,102,0,0,319,320,5,97,0,0,320,321,5,108,0,0,321,322,5,115,0,0,322,323,
		5,101,0,0,323,110,1,0,0,0,324,325,5,98,0,0,325,326,5,114,0,0,326,327,5,
		101,0,0,327,328,5,97,0,0,328,329,5,107,0,0,329,112,1,0,0,0,330,331,5,100,
		0,0,331,332,5,101,0,0,332,333,5,102,0,0,333,334,5,97,0,0,334,335,5,117,
		0,0,335,336,5,108,0,0,336,337,5,116,0,0,337,114,1,0,0,0,338,339,5,100,
		0,0,339,340,5,101,0,0,340,341,5,98,0,0,341,342,5,117,0,0,342,343,5,103,
		0,0,343,344,5,103,0,0,344,345,5,101,0,0,345,346,5,114,0,0,346,116,1,0,
		0,0,347,348,5,97,0,0,348,349,5,115,0,0,349,351,1,0,0,0,350,352,3,7,3,0,
		351,350,1,0,0,0,352,353,1,0,0,0,353,351,1,0,0,0,353,354,1,0,0,0,354,118,
		1,0,0,0,355,356,5,102,0,0,356,357,5,111,0,0,357,358,5,114,0,0,358,120,
		1,0,0,0,359,360,5,99,0,0,360,361,5,97,0,0,361,362,5,115,0,0,362,363,5,
		101,0,0,363,365,1,0,0,0,364,366,3,7,3,0,365,364,1,0,0,0,366,367,1,0,0,
		0,367,365,1,0,0,0,367,368,1,0,0,0,368,122,1,0,0,0,369,370,5,115,0,0,370,
		371,5,119,0,0,371,372,5,105,0,0,372,373,5,116,0,0,373,374,5,99,0,0,374,
		375,5,104,0,0,375,124,1,0,0,0,376,377,5,119,0,0,377,378,5,104,0,0,378,
		379,5,105,0,0,379,380,5,108,0,0,380,381,5,101,0,0,381,126,1,0,0,0,382,
		383,5,108,0,0,383,384,5,101,0,0,384,385,5,116,0,0,385,387,1,0,0,0,386,
		388,3,7,3,0,387,386,1,0,0,0,388,389,1,0,0,0,389,387,1,0,0,0,389,390,1,
		0,0,0,390,128,1,0,0,0,391,392,5,105,0,0,392,393,5,109,0,0,393,394,5,112,
		0,0,394,395,5,111,0,0,395,396,5,114,0,0,396,397,5,116,0,0,397,399,1,0,
		0,0,398,400,3,7,3,0,399,398,1,0,0,0,400,401,1,0,0,0,401,399,1,0,0,0,401,
		402,1,0,0,0,402,130,1,0,0,0,403,404,5,102,0,0,404,405,5,117,0,0,405,406,
		5,110,0,0,406,407,5,99,0,0,407,408,5,116,0,0,408,409,5,105,0,0,409,410,
		5,111,0,0,410,411,5,110,0,0,411,413,1,0,0,0,412,414,3,7,3,0,413,412,1,
		0,0,0,414,415,1,0,0,0,415,413,1,0,0,0,415,416,1,0,0,0,416,132,1,0,0,0,
		417,418,5,114,0,0,418,419,5,101,0,0,419,420,5,116,0,0,420,421,5,117,0,
		0,421,422,5,114,0,0,422,423,5,110,0,0,423,425,1,0,0,0,424,426,3,7,3,0,
		425,424,1,0,0,0,426,427,1,0,0,0,427,425,1,0,0,0,427,428,1,0,0,0,428,134,
		1,0,0,0,429,430,5,116,0,0,430,431,5,104,0,0,431,432,5,114,0,0,432,433,
		5,111,0,0,433,434,5,119,0,0,434,436,1,0,0,0,435,437,3,7,3,0,436,435,1,
		0,0,0,437,438,1,0,0,0,438,436,1,0,0,0,438,439,1,0,0,0,439,136,1,0,0,0,
		440,441,5,114,0,0,441,442,5,101,0,0,442,443,5,112,0,0,443,444,5,101,0,
		0,444,445,5,97,0,0,445,446,5,116,0,0,446,138,1,0,0,0,447,448,5,111,0,0,
		448,449,5,110,0,0,449,451,1,0,0,0,450,452,3,7,3,0,451,450,1,0,0,0,452,
		453,1,0,0,0,453,451,1,0,0,0,453,454,1,0,0,0,454,140,1,0,0,0,455,456,5,
		102,0,0,456,457,5,114,0,0,457,458,5,111,0,0,458,459,5,109,0,0,459,461,
		1,0,0,0,460,462,3,7,3,0,461,460,1,0,0,0,462,463,1,0,0,0,463,461,1,0,0,
		0,463,464,1,0,0,0,464,142,1,0,0,0,465,466,5,110,0,0,466,467,5,97,0,0,467,
		468,5,109,0,0,468,469,5,101,0,0,469,470,5,115,0,0,470,471,5,112,0,0,471,
		472,5,97,0,0,472,473,5,99,0,0,473,474,5,101,0,0,474,476,1,0,0,0,475,477,
		3,7,3,0,476,475,1,0,0,0,477,478,1,0,0,0,478,476,1,0,0,0,478,479,1,0,0,
		0,479,144,1,0,0,0,480,481,5,110,0,0,481,482,5,117,0,0,482,483,5,109,0,
		0,483,484,5,98,0,0,484,485,5,101,0,0,485,508,5,114,0,0,486,487,5,115,0,
		0,487,488,5,116,0,0,488,489,5,114,0,0,489,490,5,105,0,0,490,491,5,110,
		0,0,491,508,5,103,0,0,492,493,5,98,0,0,493,494,5,111,0,0,494,495,5,111,
		0,0,495,496,5,108,0,0,496,497,5,101,0,0,497,498,5,97,0,0,498,508,5,110,
		0,0,499,500,5,99,0,0,500,501,5,111,0,0,501,502,5,108,0,0,502,503,5,111,
		0,0,503,508,5,114,0,0,504,505,5,97,0,0,505,506,5,110,0,0,506,508,5,121,
		0,0,507,480,1,0,0,0,507,486,1,0,0,0,507,492,1,0,0,0,507,499,1,0,0,0,507,
		504,1,0,0,0,508,146,1,0,0,0,509,511,3,3,1,0,510,509,1,0,0,0,511,512,1,
		0,0,0,512,510,1,0,0,0,512,513,1,0,0,0,513,520,1,0,0,0,514,516,7,4,0,0,
		515,517,3,3,1,0,516,515,1,0,0,0,517,518,1,0,0,0,518,516,1,0,0,0,518,519,
		1,0,0,0,519,521,1,0,0,0,520,514,1,0,0,0,520,521,1,0,0,0,521,148,1,0,0,
		0,522,526,7,5,0,0,523,525,7,6,0,0,524,523,1,0,0,0,525,528,1,0,0,0,526,
		524,1,0,0,0,526,527,1,0,0,0,527,150,1,0,0,0,528,526,1,0,0,0,529,535,5,
		34,0,0,530,534,8,7,0,0,531,532,5,92,0,0,532,534,7,8,0,0,533,530,1,0,0,
		0,533,531,1,0,0,0,534,537,1,0,0,0,535,533,1,0,0,0,535,536,1,0,0,0,536,
		538,1,0,0,0,537,535,1,0,0,0,538,550,5,34,0,0,539,545,5,39,0,0,540,544,
		8,9,0,0,541,542,5,92,0,0,542,544,7,10,0,0,543,540,1,0,0,0,543,541,1,0,
		0,0,544,547,1,0,0,0,545,543,1,0,0,0,545,546,1,0,0,0,546,548,1,0,0,0,547,
		545,1,0,0,0,548,550,5,39,0,0,549,529,1,0,0,0,549,539,1,0,0,0,550,152,1,
		0,0,0,551,552,3,51,25,0,552,553,3,5,2,0,553,554,3,5,2,0,554,555,3,5,2,
		0,555,556,3,5,2,0,556,557,3,5,2,0,557,558,3,5,2,0,558,154,1,0,0,0,25,0,
		169,173,219,230,353,367,389,401,415,427,438,453,463,478,507,512,518,520,
		526,533,535,543,545,549,2,0,1,0,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
